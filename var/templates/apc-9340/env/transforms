memSensorsStatusSysTempUnitsTxt : SWITCH        : {memSensorsStatusSysTempUnits} 1=celsius,2=fahrenheit
memSensorsCommStatusTxt : SWITCH        : {memSensorsCommStatus} 1=Not Installed,2=Comms OK,3=Comms Lost
memSensorsAlarmStatusTxt        : SWITCH        : {memSensorsAlarmStatus} 1=memNormal,2=memWarning,3=memCritical
TempUnits : REGSUB : {memSensorsTemperature} /^.*$/{memSensorsStatusSysTempUnitsTxt}/
#SensorIndex : INDEX : {memSensorsStatusSensorNumber}

# Native temperature unit
#upsEnvTempUnit	: SWITCH	: {upsEnvTempUnits} 1=Celsius,2=Fahrenheit

# Change temperature from celsius to farenheit or vice versa
# Unfortunately, we can't use the calculated value for a SWITCH statement. If we could, we'd use these:
#CtoF		: MATH		: ({upsEnvTemp} x 1.8) + 32
#FtoC		: MATH		: ({upsEnvTemp} - 32) x 5 / 9
#upsEnvTempC	: SWITCH	: {upsEnvTempUnits} 1={upsEnvTemp}, 2={FtoC}
#upsEnvTempF	: SWITCH	: {upsEnvTempUnits} 1={CtoF}, 2={upsEnvTemp}

# Calculate everything! Assume nothing! And no decimals (SNMP doesn't provide decimal and we probably don't need it).
#upsEnvTempC	: MATH		: ({upsEnvTemp} - (32 x ({upsEnvTempUnits} - 1))) x (5 / (1 + (4 x {upsEnvTempUnits}))) : 0
#upsEnvTempF	: MATH		: ({upsEnvTemp} x 9 / (1 + (4 x {upsEnvTempUnits}))) + (32 x (2 - {upsEnvTempUnits})) : 0

# Trickery to get our humidity to report n/a if its below 0
#upsEnvHmdVal	: MATH		: {upsEnvHumidity}
